Agent B

package mib1;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;
import java.sql.PreparedStatement;
import java.sql.SQLException;
/**
 *
 * @author Jesper
 */
public class AgentUppdateraAlienB extends javax.swing.JFrame {
private static InfDB idb;
    /** Creates new form AgentUppdateraAlienB */
    public AgentUppdateraAlienB(InfDB idb) {
        initComponents();
         this.idb = idb;
    }


private void saveBTNActionPerformed(java.awt.event.ActionEvent evt) {                                        
    try {
        String name = nameVal.getText();
        String password = passwordVal.getText();
        String phone = phoneVal.getText();
        String date = dateVal.getText();
        
        // Konvertering från String till Integer
        int alienID = Integer.parseInt(AgentUppdateraAlienA.inputID.getText());
        int chef = Integer.parseInt(chefVal.getText());
        int plats = Integer.parseInt(platsVal.getText());
        
        //Konvertering från JavaDate till SQLdate
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Date parsedate = format.parse(date);
        java.sql.Date daydate = new java.sql.Date(parsedate.getTime());
        
               
    PreparedStatement st = idb.con.prepareStatement("UPDATE ALIEN SET NAMN = ?, LOSENORD = ?, TELEFON = ? WHERE ALIEN_ID = ?"  + AgentUppdateraAlienA.inputID.getText());
    st.setString(1, nameVal.getText());
    st.setString(2, passwordVal.getText());
    st.setString(3, phoneVal.getText());
    st.setString(4, dateVal.getText());
    st.setInt(5, Integer.parseInt(platsVal.getText()));
    st.setInt(6, Integer.parseInt(platsVal.getText()));
    st.executeUpdate();

    JOptionPane.showMessageDialog(frame, "Uppdaterad");
    
    } catch (InfException e) {
        Logger.getLogger(AgentUppdateraAlienB.class.getName()).log(Level.SEVERE, null, e);
         JOptionPane.showMessageDialog(null, "Något gick fel, försök igen");
    System.out.println(e.getMessage());
    } catch (ParseException ex) {
        Logger.getLogger(AgentUppdateraAlienB.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(AgentUppdateraAlienB.class.getName()).log(Level.SEVERE, null, ex);
    }
    }                 
    
     public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgentUppdateraAlienB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgentUppdateraAlienB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgentUppdateraAlienB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgentUppdateraAlienB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgentUppdateraAlienB().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTextField chefVal;
    private javax.swing.JTextField dateVal;
    private javax.swing.JTextField nameVal;
    private javax.swing.JPasswordField passwordVal;
    private javax.swing.JTextField phoneVal;
    private javax.swing.JTextField platsVal;
    private javax.swing.JButton saveBTN;
    private javax.swing.JLabel txtChef1;
    private javax.swing.JLabel txtChef2;
    private javax.swing.JLabel txtDate1;
    private javax.swing.JLabel txtDate2;
    private javax.swing.JLabel txtName;
    private javax.swing.JLabel txtPassword;
    private javax.swing.JLabel txtPhone;
    private javax.swing.JLabel txtPlats;
    private javax.swing.JLabel txtUpAlien;
    // End of variables declaration     
